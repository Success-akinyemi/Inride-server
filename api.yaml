swagger: '2.0'
info:
  title: Inride API Documentation
  description: API documentation Inride. Authentications are handled with cookies set from the server.
  version: 1.0
  contact:
    email: successakinyemi365@gmail.com
  license:
    name: Apache 2.0
    url: 'http://apache.org/'
host: inride-server.onrender.com
basePath: /
schemes:
  - https

tags:
  - name: General
    description: General
  - name: Auth
    description: Endpoints for authentication
  - name: Passenger Auth
    description: Endpoints for passenger registration Authentication
  - name: Driver Auth
    description: Endpoints for driver registration Authentication
  - name: Passenger Socket.io Request
    description: Endpoints for passenger Socket.io Request
  - name: Driver Socket.io Request
    description: Endpoints for driver Socket.io Request
  - name: Passenger 
    description: Endpoints for passenger 
  - name: Driver 
    description: Endpoints for driver 
  
paths:
  /:
    get:
      tags:
        - General
      summary: Home GET request
      description: The first request to check server
      responses:
        200:
          description: Success

  /api/auth/verifyOtp:
    post:
      tags:
        - Auth
      summary: Verify OTP
      description: Verify OTP sent to user
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - otp
            properties:
              otp:
                type: string
      responses:
        200:
          description: OTP Verified
        400:
          description: User error
        500:
          description: Server error

  /api/auth/signout:
    post:
      tags:
        - Auth
      summary: Signout a user
      description: This endpoint signout a user
      responses:
        200:
          description:  successful
        500:
          description: Server error

#PASSENGER AUTH

  /api/passenger/auth/registerNumber:
    post:
      tags:
        - Passenger Auth
      summary: Register Mobile Number of user
      description: This endpoint registers the mobile number of a new passenger user. Mobile number is required in international format (e.g., +2349012345678 an OTP will be sent via SMS).
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - mobileNumber
            properties:
              mobileNumber:
                type: string
      responses:
        201:
          description: Verification OTP sent
        400:
          description: User error
        500:
          description: Server error

  /api/passenger/auth/resendOtp:
    post:
      tags:
        - Passenger Auth
      summary: Resend OTP to user Mobile Number
      description: This endpoint resends the otp to the user mobile number of a passenger user. Mobile number is required in international format (e.g., +2349012345678). OTP will be sent via SMS.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - mobileNumber
            properties:
              mobileNumber:
                type: string
      responses:
        201:
          description: Verification OTP sent
        400:
          description: User error
        500:
          description: Server error

  /api/passenger/auth/verifyPersonalDetails:
    post:
      tags:
        - Passenger Auth
      summary: Verify email does not exist
      description: This endpoint verifies email does not exist and a valid mobile number.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - mobileNumber
            properties:
              email:
                type: string
              mobileNumber:
                type: string
      responses:
        201:
          description: Successful
        400:
          description: User error
        500:
          description: Server error

  /api/passenger/auth/verifySSN:
    post:
      tags:
        - Passenger Auth
      summary: Verify user ssn
      description: This endpoint verifies the ssn of a passenger user.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ssn
            properties:
              ssn:
                type: string
      responses:
        201:
          description: Successful
        400:
          description: User error
        500:
          description: Server error

  /api/passenger/auth/resendOtp:
    post:
      tags:
        - Passenger Auth
      summary: Resend OTP to user Mobile Number
      description: This endpoint resends the otp to the user mobile number of a passenger user. Mobile number is required in international format (e.g., +2349012345678). OTP will be sent via SMS.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - mobileNumber
            properties:
              mobileNumber:
                type: string
      responses:
        201:
          description: Verification OTP sent
        400:
          description: User error
        500:
          description: Server error

  /api/passenger/auth/registerUser:
    post:
      tags:
        - Passenger Auth
      summary: Register user account
      description: Completes registration for a passenger user account.
      consumes:
        - multipart/form-data
      parameters:
        - name: email
          in: formData
          required: true
          type: string
        - name: ssn
          in: formData
          required: false
          type: string
        - name: firstName
          in: formData
          required: true
          type: string
        - name: lastName
          in: formData
          required: true
          type: string
        - name: mobileNumber
          in: formData
          required: true
          type: string
        - name: idCardType
          in: formData
          required: true
          type: string
          enum:
            - driverLicense
            - internationalPassport
            - voterCard
        - name: idCardImgFront
          in: formData
          required: true
          type: file
        - name: idCardImgBack
          in: formData
          required: true
          type: file
        - name: profileImg
          in: formData
          required: true
          type: file
      responses:
        200:
          description: User data sent - successful
        400:
          description: User error
        500:
          description: Server error

  /api/passenger/auth/signin:
    post:
      tags:
        - Passenger Auth
      summary: Signin passeger
      description: This endpoint sigin in a user to their account after which an OTP is sent as an email to the mobile number after a successfull signin
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - mobileNumber
            properties:
              mobileNumber:
                type: string
      responses:
        201:
          description: Verification account OTP sent
        400:
          description: User error
        500:
          description: Server error

  /api/passenger/auth/verifyLoginOtp:
    post:
      tags:
        - Passenger Auth
      summary: Verify Login Otp
      description: This endpoint verifies the otp sent to the user after the attempt to login. after a successful sigin cookies is been set and sent from the server to the client
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - otp
            properties:
              otp:
                type: string
      responses:
        201:
          description: userData - successful
        400:
          description: User error
        500:
          description: Server error

  /api/passenger/auth/verifyToken:
    post:
      tags:
        - Passenger Auth
      summary: Verify passenger authentication
      description: This endpoint verifies wheather a passenger is still authenticated or not
      responses:
        200:
          description: userData - successful
        403:
          description: UnAuthenicated
        500:
          description: Server error

#DRIVER AUTH

  /api/driver/auth/registerWithPassengerAccount:
    post:
      tags:
        - Driver Auth
      summary: Register New Driver from Passenger account
      description: This endpoint registers a new  driver using their passenger acocunt. the mobile number of the passenger account is required.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - mobileNumber
            properties:
              mobileNumber:
                type: string
      responses:
        201:
          description: successful - otp sent
        400:
          description: User error
        500:
          description: Server error

  /api/driver/auth/verifyPassengerToDriverAccountOtp:
    post:
      tags:
        - Driver Auth
      summary: Verify OTP sent to passenger mobile number
      description: This endpoint verifies the otp sent to the passenger mobile number after the attempt to register as a driver.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - otp
            properties:
              otp:
                type: string
      responses:
        201:
          description: Driver Account created - successful
        400:
          description: User error
        500:
          description: Server error

  /api/driver/auth/completeDriverRegistration:
    post:
      tags:
        - Driver Auth
      summary: Complete Driver Registration
      description: Completes registration for a driver account. carDetails object values include - '{registrationNumber, year, model, color, noOfSeats, carImg}'. coordinates of the driver location is also required as an array [longitude, latitude] longitude first for GeoJSON
      consumes:
        - multipart/form-data
      parameters:
        - name: opreatingCity
          in: formData
          required: true
          type: string
        - name: ssn
          in: formData
          required: false
          type: string
        - name: mobileNumber
          in: formData
          required: false
          type: string
        - name: carDetails
          in: formData
          required: true
          type: object
          required:
            - registrationNumber
            - year
          properties:
            registrationNumber:
              type: string
            year:
              type: string
            model:
              type: string
            color:
              type: string
            noOfSeats:
              type: string
            carImg:
              type: string
        - name: pricePerKm
          in: formData
          required: true
          type: number
        - name: driverLincenseImgFront
          in: formData
          required: true
          type: file
        - name: driverLincenseImgBack
          in: formData
          required: true
          type: file
        - name: profileImg
          in: formData
          required: true
          type: file
        - name: coordinates
          in: formData
          required: true
          type: array
          required:
            - longitude
            - latitude
          properties:
            - longitude:
              type: number
            - latitude:
              type: number
      responses:
        201:
          description: Account created successfully
        400:
          description: User error
        500:
          description: Server error

  /api/driver/auth/registerNewDriver:
    post:
      tags:
        - Driver Auth
      summary: Register Mobile Number of driver
      description: This endpoint registers the mobile number of a new driver user. Mobile number is required in international format (e.g., +2349012345678 an Otp will be sent via SMS).
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - mobileNumber
            properties:
              mobileNumber:
                type: string
      responses:
        201:
          description: Verification OTP sent
        400:
          description: User error
        500:
          description: Server error

  /api/driver/auth/resendOtp:
    post:
      tags:
        - Driver Auth
      summary: Resend OTP to driver Mobile Number
      description: This endpoint resends the otp to the driver mobile number. Mobile number is required in international format (e.g., +2349012345678). OTP will be sent via SMS.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - mobileNumber
            properties:
              mobileNumber:
                type: string
      responses:
        201:
          description: Verification OTP sent
        400:
          description: User error
        500:
          description: Server error

  /api/driver/auth/verifyPersonalDetails:
    post:
      tags:
        - Driver Auth
      summary: Verify if email does not exist and account is valid
      description: This endpoint verifies email does not exist and a valid mobile number.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - email
              - mobileNumber
            properties:
              email:
                type: string
              mobileNumber:
                type: string
      responses:
        201:
          description: Successful
        400:
          description: User error
        500:
          description: Server error

  /api/driver/auth/verifySSN:
    post:
      tags:
        - Driver Auth
      summary: Verify driver ssn
      description: This endpoint verifies the ssn of a driver user.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ssn
            properties:
              ssn:
                type: string
      responses:
        201:
          description: Successful
        400:
          description: User error
        500:
          description: Server error

  /api/driver/auth/completeNewDriverRegistration:
    post:
      tags:
        - Driver Auth
      summary: Complete new Driver Registration
      description: Completes registration for a new driver account. carDetails object include- '{registrationNumber, year, model, color, noOfSeats, carImg}'. coordinates of the driver location is also required as an array [longitude, latitude] longitude first for GeoJSON
      consumes:
        - multipart/form-data
      parameters:
        - name: opreatingCity
          in: formData
          required: true
          type: string
        - name: carDetails
          in: formData
          required: true
          type: object
          properties:
            registrationNumber:
              type: string
            year:
              type: string
            model:
              type: string
            color:
              type: string
            noOfSeats:
              type: string
            carImg:
              type: string
        - name: pricePerKm
          in: formData
          required: true
          type: number
        - name: driverLincenseImgFront
          in: formData
          required: true
          type: file
        - name: driverLincenseImgBack
          in: formData
          required: true
          type: file
        - name: profileImg
          in: formData
          required: true
          type: file
        - name: mobileNumber
          in: formData
          required: true
          type: string
        - name: email
          in: formData
          required: true
          type: string
        - name: firstName
          in: formData
          required: true
          type: string
        - name: lastName
          in: formData
          required: true
          type: string
        - name: ssn
          in: formData
          required: false
          type: string
        - name: coordinates
          in: formData
          required: true
          type: array
          required:
            - longitude
            - latitude
          properties:
            - longitude:
              type: number
            - latitude:
              type: number
      responses:
        201:
          description: Account created successfully
        400:
          description: User error
        500:
          description: Server error

  /api/driver/auth/signin:
    post:
      tags:
        - Driver Auth
      summary: Signin driver
      description: This endpoint sigin in a driver to their account after which an OTP is sent as an email to the mobile number after a successfull signin
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - mobileNumber
            properties:
              mobileNumber:
                type: string
      responses:
        201:
          description: Verification account OTP sent
        400:
          description: User error
        500:
          description: Server error

  /api/driver/auth/verifyLoginOtp:
    post:
      tags:
        - Driver Auth
      summary: Verify Login Otp
      description: This endpoint verifies the otp sent to the driver after the attempt to login. after a successful sigin cookies is been set and sent from the server to the client
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - otp
            properties:
              otp:
                type: string
      responses:
        201:
          description: userData - successful
        400:
          description: User error
        500:
          description: Server error

  /api/driver/auth/verifyToken:
    post:
      tags:
        - Driver Auth
      summary: Verify driver authentication
      description: This endpoint verifies wheather a driver is still authenticated or not, e.g can be used in splash screen while loading
      responses:
        200:
          description: userData - successful
        403:
          description: UnAuthenicated
        500:
          description: Server error


#PASSENGER SOCKET.IO REQUEST

  /passenger/getNearByDrivers:
    post:
      tags:
        - Passenger Socket.io Request
      summary: get Location of drivers around a passenger - socket.io request -  socket.emit('getNearbyDrivers', data); socket.on('nearbyDrivers', serverResponse)
      description: This endpoint get the near by drivers around a passenger location. The passenger location is required as an array [longitude, latitude] longitude first for GeoJSON
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - type
              - coordinates
            properties:
              type:
                radius: number
              location:
                type: array
                required:
                  - longitude
                  - latitude
                properties:
                  - longitude:
                    type: number
                  - latitude:
                    type: number
      responses:
        201:
          description: Drivers locations
        400:
          description: User error
        500:
          description: Server error


#DRIVER SOCKET.IO REQUEST

  /driver/updateLocation:
    post:
      tags:
        - Driver Socket.io Request
      summary: Update the current driver location - socket.io request - socket.emit('updateLocation', locationData); socket.on('locationUpdated')
      description: This endpoint update the driver locations for passenger to see e.g can be send every 5 seconds for high accuracy. 
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - type
              - coordinates
            properties:
              type:
                type: string
                value: Point
              coordinates:
                type: array
                required:
                  - longitude
                  - latitude
                properties:
                  - longitude:
                    type: number
                  - latitude:
                    type: number
      responses:
        201:
          description: Location updated
        400:
          description: User error
        500:
          description: Server error

  /driver/goOnline:
    post:
      tags:
        - Driver Socket.io Request
      summary: Update driver online status - socket.io request - socket.emit('goOnline', data) socket.on('statusUpdated', serverResponse)
      description: This endpoint update the driver online status to true for passenger to see
      responses:
        201:
          description: Drive online
        400:
          description: User error
        500:
          description: Server error

  /driver/goOffline:
    post:
      tags:
        - Driver Socket.io Request
      summary: Update driver online status - socket.io request - socket.emit('goOffline', data) socket.on('statusUpdated', serverResponse)
      description: This endpoint update the driver online status to false for passenger
      responses:
        201:
          description: Drive offline
        400:
          description: User error
        500:
          description: Server error

#DRIVER
  /driver/activateCar:
    post:
      tags:
        - Driver 
      summary: Update the  driver active car
      description: This endpoint update the driver active car to be used for the day
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - _id
            properties:
              _id:
                type: string
      responses:
        201:
          description: Car activated successfully
        400:
          description: User error
        500:
          description: Server error
